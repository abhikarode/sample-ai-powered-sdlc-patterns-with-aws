# ===== INCIDENT MANAGEMENT SYSTEM CONFIGURATION =====
# Copy this file to .env and update with your actual credentials
# This single file is used by both deployment and runtime components

# ===== SPLUNK INTEGRATION (REQUIRED) =====
# Your Splunk instance details
SPLUNK_HOST=your-splunk-host.com
SPLUNK_TOKEN=your-splunk-token
# Note: Use token-based auth instead of username/password for security

# ===== SLACK INTEGRATION (OPTIONAL) =====
# Get these from your Slack app configuration at https://api.slack.com/apps
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_APP_TOKEN=xapp-your-slack-app-token
SLACK_CHANNEL=#incidents

# ===== PAGERDUTY INTEGRATION (OPTIONAL) =====
# Get these from your PagerDuty account
PAGERDUTY_USER_API_KEY=your-pagerduty-api-key
PAGERDUTY_API_HOST=https://api.pagerduty.com
PAGERDUTY_APP_HOST=https://app.pagerduty.com
PAGERDUTY_AUTO_CREATE_INCIDENTS=false

# ===== AWS CONFIGURATION (REQUIRED FOR AI FEATURES) =====
# AWS credentials for Bedrock AI analysis
AWS_REGION=us-east-1
REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
# Bedrock model for AI analysis
BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0

# ===== APPLICATION CONFIGURATION =====
# API server settings
API_PORT=8002
API_HOST=0.0.0.0
LOG_LEVEL=INFO
ENVIRONMENT=development

# ===== API SECURITY =====
# API is secured with Slack signature verification only
# SLACK_SIGNING_SECRET is used to verify requests come from Slack
# No JWT tokens or demo users needed

# ===== DETECTION CONFIGURATION =====
# How often to check for incidents (in seconds)
DETECTION_INTERVAL=300
# Enable AI-powered analysis
ENABLE_AI_ANALYSIS=true
# Enable automated remediation
ENABLE_AUTOMATION=true

# ===== OPTIONAL SETTINGS =====
# Database (defaults to in-memory if not specified)
DATABASE_URL=sqlite:///incidents.db
# Redis for caching (optional)
REDIS_URL=redis://localhost:6379

# ===== DEPLOYMENT CONFIGURATION =====
# These are used by the deployment script
AWS_ACCOUNT_ID=your-aws-account-id
ACCOUNT_ID=your-aws-account-id
ENVIRONMENT=dev
DEPLOYMENT_TYPE=ecs

# ===== STORAGE CONFIGURATION =====
# Currently using in-memory storage with optional file persistence
STORAGE_TYPE=memory
STORAGE_PERSIST_TO_FILE=true
STORAGE_DIR=/tmp
STORAGE_CACHE_FILE=incident_cache.json
STORAGE_PROCESSED_FILE=processed_incidents.json

# For production, consider implementing DynamoDB/Redis:
# STORAGE_TYPE=dynamodb
# DYNAMODB_TABLE_NAME=incident-management-prod
# REDIS_URL=redis://your-redis-host:6379