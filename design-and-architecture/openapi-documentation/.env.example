# =============================================================================
# Domain-Driven API Generator - Environment Configuration Template
# =============================================================================
# This file contains all required environment variables for the application.
# Copy this file to .env and fill in the actual values for your deployment.
# DO NOT commit the .env file with actual values to version control.

# =============================================================================
# AWS CONFIGURATION
# =============================================================================

# AWS Region where resources are deployed
# Pattern: [a-z]{2}-[a-z]+-[0-9]
# Example: us-east-1, eu-west-1, ap-southeast-1
AWS_REGION=your-aws-region

# =============================================================================
# LAMBDA FUNCTION CONFIGURATION
# =============================================================================

# Lambda Function ARNs (Updated automatically by CDK deployment)
# Pattern: arn:aws:lambda:REGION:ACCOUNT:function:FUNCTION_NAME
DOMAIN_ANALYZER_LAMBDA_ARN=arn:aws:lambda:REGION:ACCOUNT:function:your-domain-analyzer-function
LAMBDA_FUNCTION_ARN=arn:aws:lambda:REGION:ACCOUNT:function:your-doc-generator-function
REACT_APP_BACKEND_FUNCTION_ARN=arn:aws:lambda:REGION:ACCOUNT:function:your-backend-function

# Backend Lambda Function URL (Updated automatically by CDK deployment)
# Pattern: https://UNIQUE_ID.lambda-url.REGION.on.aws/
REACT_APP_API_URL=https://your-unique-id.lambda-url.your-region.on.aws/

# =============================================================================
# AMAZON BEDROCK CONFIGURATION
# =============================================================================

# Bedrock Agent ID (Updated automatically by CDK deployment)
# Pattern: [A-Z0-9]{10}
BEDROCK_AGENT_ID=YOUR_AGENT_ID

# Bedrock Agent Alias ID
# Default: TSTALIASID for test alias
BEDROCK_AGENT_ALIAS_ID=TSTALIASID

# Bedrock Knowledge Base ID (Updated automatically by CDK deployment)
# Pattern: [A-Z0-9]{10}
KNOWLEDGE_BASE_ID=YOUR_KB_ID

# Bedrock Model ID for Claude
# Default: eu.anthropic.claude-3-7-sonnet-20250219-v1:0
MODEL_ID=eu.anthropic.claude-3-7-sonnet-20250219-v1:0

# Bedrock Region (usually same as AWS_REGION)
BEDROCK_REGION=your-aws-region

# =============================================================================
# S3 BUCKET CONFIGURATION
# =============================================================================

# S3 Bucket names (Updated automatically by CDK deployment)
# Pattern: bucket-name-ACCOUNT-REGION
KNOWLEDGE_BASE_BUCKET=your-knowledge-base-bucket-ACCOUNT-REGION
DOMAIN_ANALYZER_BUCKET=your-domain-analyzer-bucket-ACCOUNT-REGION
BUCKET_NAME=your-domain-analyzer-bucket-ACCOUNT-REGION

# =============================================================================
# AMAZON COGNITO AUTHENTICATION
# =============================================================================

# Cognito User Pool ID (Updated automatically by CDK deployment)
# Pattern: REGION_RANDOM_STRING
REACT_APP_USER_POOL_ID=your-region_UserPoolId
USER_POOL_ID=your-region_UserPoolId

# Cognito User Pool Client ID (Updated automatically by CDK deployment)
# Pattern: 26-character alphanumeric string
REACT_APP_USER_POOL_CLIENT_ID=your-user-pool-client-id
USER_POOL_CLIENT_ID=your-user-pool-client-id

# Cognito Auth Domain (Updated automatically by CDK deployment)
# Pattern: your-domain.auth.REGION.amazoncognito.com
REACT_APP_AUTH_DOMAIN=your-auth-domain.auth.your-region.amazoncognito.com
AUTH_DOMAIN=your-auth-domain.auth.your-region.amazoncognito.com

# Cognito Identity Pool ID (for Vite build)
# Pattern: REGION:UUID
VITE_IDENTITY_POOL_ID=your-region:your-identity-pool-uuid

# =============================================================================
# VITE BUILD CONFIGURATION (Client-side)
# =============================================================================

# Vite environment variables for client build
# These duplicate the React app variables for Vite compatibility
VITE_USER_POOL_ID=your-region_UserPoolId
VITE_USER_POOL_CLIENT_ID=your-user-pool-client-id
VITE_AUTH_DOMAIN=your-auth-domain.auth.your-region.amazoncognito.com
VITE_AWS_REGION=your-aws-region
VITE_API_URL=https://your-unique-id.lambda-url.your-region.on.aws/

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Node.js Environment
# Values: development, production, test
NODE_ENV=production

# Server Port (for local development)
# Default: 3000
PORT=3000

# =============================================================================
# AWS CREDENTIALS (Optional - Use IAM roles in production)
# =============================================================================
# These should only be used for local development.
# In production, use IAM roles attached to Lambda functions or EC2 instances.

# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key

# =============================================================================
# VALIDATION PATTERNS
# =============================================================================
# Use these patterns to validate your environment variables:
#
# AWS_REGION: ^[a-z]{2}-[a-z]+-[0-9]$
# LAMBDA ARN: ^arn:aws:lambda:[a-z0-9-]+:[0-9]{12}:function:[a-zA-Z0-9-_]+$
# USER_POOL_ID: ^[a-z0-9-]+_[A-Za-z0-9]+$
# BEDROCK_AGENT_ID: ^[A-Z0-9]{10}$
# S3_BUCKET: ^[a-z0-9][a-z0-9-]*[a-z0-9]$
# LAMBDA_URL: ^https://[a-z0-9]+\.lambda-url\.[a-z0-9-]+\.on\.aws/$

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
# 1. Most values are automatically populated by the CDK deployment process
# 2. Copy this file to .env before running CDK deploy
# 3. The deployment scripts will update the .env file with actual resource ARNs
# 4. Never commit the .env file with real values to version control
# 5. Use AWS Systems Manager Parameter Store for production secrets